import { type NextPage } from "next";
import Head from "next/head";
import Link from "next/link";
import { signIn, signOut, useSession } from "next-auth/react";
import { useAuth, SignInButton, useUser, SignedOut, SignOutButton } from "@clerk/nextjs";

import { api } from "~/utils/api";

const CreatePost = () => {
  return <div className="flex flex-row bg-red-100 h-full w-full pl-5 pt-3 pb-3 pr-5">
      <div className="w-40 bg-slate-100">create post</div>
      <div className="flex-grow bg-slate-100">create post</div>
    </div>
}

const Home: NextPage = () => {
  const user = useUser()
  const { data, isLoading } = api.example.getAll.useQuery();

  if (isLoading) return <div>loading</div>
  if (!data) return <div>something went wrong</div>
  
  console.log('the data', data);

  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex justify-center h-screen">
        <div className="bg-slate-200 border-slate-400 h-full w-full md:max-w-2xl border-x">
          <div className="justify-center flex border-b border-slate-400 p-4">
            {!!user.isSignedIn && <SignOutButton/>}
            {!user.isSignedIn && <SignInButton/>}
          </div>
          <div className="justify-center flex border-b border-slate-400">
            {!!user.isSignedIn && <CreatePost/>}
          </div>
          <div className="flex flex-col">
            {data?.map((post) => (
              <div key={post.id}
                  className=" border-b border-slate-400 p-5 hover:bg-slate-50 transition-color ease-in duration-300" 
              >{post.content}</div>))
            }
          </div>
        </div>
      </main>
    </>
  );
};

export default Home;

const AuthShowcase: React.FC = () => {
  const { data: sessionData } = useSession();

  const { data: secretMessage } = api.example.getSecretMessage.useQuery(
    undefined, // no input
    { enabled: sessionData?.user !== undefined },
  );

  return (
    <div className="flex flex-col items-center justify-center gap-4">
      <p className="text-center text-2xl text-white">
        {sessionData && <span>Logged in as {sessionData.user?.name}</span>}
        {secretMessage && <span> - {secretMessage}</span>}
      </p>
      <button
        className="rounded-full bg-white/10 px-10 py-3 font-semibold text-white no-underline transition hover:bg-white/20"
        onClick={sessionData ? () => void signOut() : () => void signIn()}
      >
        {sessionData ? "Sign out" : "Sign in"}
      </button>
    </div>
  );
};
